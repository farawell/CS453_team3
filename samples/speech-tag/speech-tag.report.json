{
  "prompt": "---\nname: Speech Tag\ndescription: Determine the part of speech for a given word\nsource: \"modified from 'SAMMO: A general-purpose framework for prompt optimization'\"\nurl: https://www.microsoft.com/en-us/research/uploads/prod/2024/04/Prompts-As-Programs_A-Structure-Aware-Approach.pdf\ninputs:\n    sentence:\n        type: \"string\"\n    word:\n        type: \"string\"\nsample:\n    sentence: \"The quick brown fox jumps over the lazy dog.\"\n    word: \"jumps\"\n---\nsystem:\nIn this task, you will be presented with a sentence and a word contained\nin that sentence. You have to determine the part of speech for a given word\nand return just the tag for the word's part of speech. \n\nReturn only the part of speech tag.  If the word cannot be tagged with\nthe listed tags, return Unknown.  If you are unable to tag the word, return\nCantAnswer.\n\nHere is the\nAlphabetical list of part-of-speech tags used in this task: CC: Coordinating conjunction, CD: Cardinal number, DT:\nDeterminer, EX: Existential there, FW: Foreign word, IN: Preposition or subordinating conjunction, JJ: Adjective, JJR:\nAdjective, comparative, JJS: Adjective, superlative, LS: List item marker, MD: Modal, NN: Noun, singular or mass, NNS: Noun,\nplural, NNP: Proper noun, singular, NNPS: Proper noun, plural, PDT: Predeterminer, POS: Possessive ending, PRP: Personal\npronoun, PRP$: Possessive pronoun, RB: Adverb, RBR: Adverb, comparative, RBS: Adverb, superlative, RP: Particle, SYM: Symbol,\nTO: to, UH: Interjection, VB: Verb, base form, VBD: Verb, past tense, VBG: Verb, gerund or present participle, VBN: Verb,\npast participle, VBP: Verb, non-3rd person singular present, VBZ: Verb, 3rd person singular present, WDT: Wh-determiner, WP:\nWh-pronoun, WP$: Possessive wh-pronoun, WRB: Wh-adverb\nuser:\n{{sentence}}; {{word}}",
  "inputSpec": "The input must be a sentence followed by a semicolon and a word.  \nThe sentence can contain any valid sequence of words in a natural language format.  \nThe word must be a single, valid word contained within the sentence.  \nThe sentence and word must be separated by a semicolon without any additional characters or spaces.",
  "rules": [
    "The output must be a single part of speech tag from the provided list.",
    "The output must only contain the part of speech tag and nothing else.",
    "If the word cannot be tagged with one of the provided tags, the output must be \"Unknown\".",
    "If the word cannot be tagged and the reason is unclear, the output must be \"CantAnswer\".",
    "The part of speech tag must be in uppercase letters as listed.",
    "The output must not include multiple tags or any explanatory text."
  ],
  "inverseRules": [],
  "baseLineTests": [
    "sentence: \"The quick brown fox jumps over the lazy dog.\" ; word: \"fox\"",
    "sentence: \"She sells sea shells by the sea shore.\" ; word: \"sells\"",
    "sentence: \"He will finish the project tomorrow.\" ; word: \"will\"",
    "sentence: \"An apple a day keeps the doctor away.\" ; word: \"apple\"",
    "sentence: \"There are many solutions to the problem.\" ; word: \"There\"",
    "sentence: \"I can hear the music clearly.\" ; word: \"clearly\"",
    "sentence: \"This is the biggest challenge I've faced.\" ; word: \"biggest\"",
    "sentence: \"If it rains, we will cancel the trip.\" ; word: \"rains\"",
    "sentence: \"She quickly ran to the store.\" ; word: \"quickly\"",
    "sentence: \"Despite the warnings, he went ahead.\" ; word: \"Despite\"",
    "sentence: \"Look at those beautiful flowers.\" ; word: \"flowers\"",
    "sentence: \"John likes to read books.\" ; word: \"John\"",
    "sentence: \"Wow, that's an amazing view!\" ; word: \"Wow\"",
    "sentence: \"The committee approved the proposal unanimously.\" ; word: \"committee\"",
    "sentence: \"She wondered why he left so early.\" ; word: \"why\"",
    "sentence: \"Everyone except Tom was present.\" ; word: \"except\"",
    "sentence: \"He has a unique perspective on the issue.\" ; word: \"unique\"",
    "sentence: \"They found three missing keys.\" ; word: \"three\""
  ],
  "tests": [
    {
      "rule": "The output must only contain the part of speech tag and nothing else.",
      "input": "The quick brown fox jumps over the lazy dog;fox",
      "expected": "NN",
      "reasoning": "Tests noun identification using a classic sentence. Valid input as per specification."
    },
    {
      "rule": "The output must only contain the part of speech tag and nothing else.",
      "input": "She swiftly ran towards the finish line;swiftly",
      "expected": "RB",
      "reasoning": "Tests adverb identification. The word is clearly an adverb, ensuring adherence to part of speech tagging rules."
    },
    {
      "rule": "The output must only contain the part of speech tag and nothing else.",
      "input": "Every cloud has a silver lining;Every",
      "expected": "DT",
      "reasoning": "Tests determiner identification. Valid sentence and word separation with expected determiner tag."
    },
    {
      "rule": "If the word cannot be tagged with one of the provided tags, the output must be \"Unknown\".",
      "input": "I will go to the park later;will",
      "expected": "MD",
      "reasoning": "Tests for modal verb identification, confirming expected output format compliance."
    },
    {
      "rule": "If the word cannot be tagged with one of the provided tags, the output must be \"Unknown\".",
      "input": "Anna and Mike went to the store;and",
      "expected": "CC",
      "reasoning": "Tests coordinating conjunction identification, checking the concise output requirement."
    },
    {
      "rule": "If the word cannot be tagged with one of the provided tags, the output must be \"Unknown\".",
      "input": "Quickly finish your homework;Quickly",
      "expected": "RB",
      "reasoning": "Tests adverb identification with a straightforward adverb, ensuring correct tag."
    },
    {
      "rule": "If the word cannot be tagged and the reason is unclear, the output must be \"CantAnswer\".",
      "input": "Xyzzy is not a real word;Xyzzy",
      "expected": "Unknown",
      "reasoning": "Tests handling of nonsensical word, expecting 'Unknown'. Valid input format."
    },
    {
      "rule": "If the word cannot be tagged and the reason is unclear, the output must be \"CantAnswer\".",
      "input": "Her paintings were in vivid colors;vivid",
      "expected": "JJ",
      "reasoning": "Tests adjective recognition, ensuring 'Unknown' is correctly not triggered."
    },
    {
      "rule": "If the word cannot be tagged and the reason is unclear, the output must be \"CantAnswer\".",
      "input": "He felt a sense of deja vu;deja",
      "expected": "FW",
      "reasoning": "Tests foreign word recognition, ensuring correct tagging of foreign words."
    },
    {
      "rule": "The part of speech tag must be in uppercase letters as listed.",
      "input": "Blorft is the best word ever;Blorft",
      "expected": "CantAnswer",
      "reasoning": "Tests unclear tagging situation with a made-up word, expecting 'CantAnswer'."
    },
    {
      "rule": "The part of speech tag must be in uppercase letters as listed.",
      "input": "The cat sat on the mat;mat",
      "expected": "NN",
      "reasoning": "Tests clear noun identification, ensuring 'CantAnswer' is not triggered incorrectly."
    },
    {
      "rule": "The part of speech tag must be in uppercase letters as listed.",
      "input": "She can dance very well;can",
      "expected": "MD",
      "reasoning": "Tests tagging of modal verb, ensuring clear cases are tagged correctly without 'CantAnswer'."
    },
    {
      "rule": "The output must not include multiple tags or any explanatory text.",
      "input": "An apple a day keeps the doctor away;An",
      "expected": "DT",
      "reasoning": "Tests determiner recognition, ensuring uppercase tag output."
    },
    {
      "rule": "The output must not include multiple tags or any explanatory text.",
      "input": "Tomorrow will be a brighter day;Tomorrow",
      "expected": "NN",
      "reasoning": "Tests correct noun tagging with uppercase output."
    },
    {
      "rule": "The output must not include multiple tags or any explanatory text.",
      "input": "He looked at the beautiful sunset;beautiful",
      "expected": "JJ",
      "reasoning": "Tests adjective tag adherence to capitalization rule."
    },
    {
      "inverse": true,
      "input": "Eat, sleep, repeat;repeat",
      "expected": "VB",
      "reasoning": "Tests verb identification, ensuring no additional text accompanies the tag."
    },
    {
      "inverse": true,
      "input": "She sang a song;She",
      "expected": "PRP",
      "reasoning": "Tests pronoun identification, confirming singular tag output."
    },
    {
      "inverse": true,
      "input": "They were walking in the park;in",
      "expected": "IN",
      "reasoning": "Tests preposition identification in a clear context, ensuring correct tag without extra text."
    }
  ]
}