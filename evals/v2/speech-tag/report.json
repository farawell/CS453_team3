{
  "prompt": "---\nname: Speech Tag\ndescription: Determine the part of speech for a given word\nsource: \"modified from 'SAMMO: A general-purpose framework for prompt optimization'\"\nurl: https://www.microsoft.com/en-us/research/uploads/prod/2024/04/Prompts-As-Programs_A-Structure-Aware-Approach.pdf\ninputs:\n    sentence:\n        type: \"string\"\n    word:\n        type: \"string\"\nsample:\n    sentence: \"The quick brown fox jumps over the lazy dog.\"\n    word: \"jumps\"\n---\nsystem:\nIn this task, you will be presented with a sentence and a word contained\nin that sentence. You have to determine the part of speech for a given word\nand return just the tag for the word's part of speech. \n\nReturn only the part of speech tag.  If the word cannot be tagged with\nthe listed tags, return Unknown.  If you are unable to tag the word, return\nCantAnswer.\n\nHere is the\nAlphabetical list of part-of-speech tags used in this task: CC: Coordinating conjunction, CD: Cardinal number, DT:\nDeterminer, EX: Existential there, FW: Foreign word, IN: Preposition or subordinating conjunction, JJ: Adjective, JJR:\nAdjective, comparative, JJS: Adjective, superlative, LS: List item marker, MD: Modal, NN: Noun, singular or mass, NNS: Noun,\nplural, NNP: Proper noun, singular, NNPS: Proper noun, plural, PDT: Predeterminer, POS: Possessive ending, PRP: Personal\npronoun, PRP$: Possessive pronoun, RB: Adverb, RBR: Adverb, comparative, RBS: Adverb, superlative, RP: Particle, SYM: Symbol,\nTO: to, UH: Interjection, VB: Verb, base form, VBD: Verb, past tense, VBG: Verb, gerund or present participle, VBN: Verb,\npast participle, VBP: Verb, non-3rd person singular present, VBZ: Verb, 3rd person singular present, WDT: Wh-determiner, WP:\nWh-pronoun, WP$: Possessive wh-pronoun, WRB: Wh-adverb\nuser:\n{{sentence}}; {{word}}",
  "inputSpec": "The input consists of a sentence followed by a word from that sentence.\nThe sentence should be a coherent string of words.\nThe word must be a single word that exists within the provided sentence.\nOnly one sentence and one word pair is valid per input.\nThe word should be a valid component of the sentence.",
  "rules": [
    "The output must be a single part-of-speech tag based on the provided list of tags.",
    "If the provided word cannot be tagged with any of the listed part-of-speech tags, the output must be the word \"Unknown\".",
    "If the chatbot is unable to determine the part of speech for the provided word for any reason, the output must be the word \"CantAnswer\".",
    "The response must not include any additional text, explanations, or formatting other than the single part-of-speech tag, or the words \"Unknown\" or \"CantAnswer\"."
  ],
  "inverseRules": [
    "The output can be multiple part-of-speech tags based on any available list of tags.",
    "If the provided word cannot be tagged with any of the listed part-of-speech tags, the output must be the actual input word itself.",
    "If the chatbot is unable to determine the part of speech for the provided word for any reason, the output must be \"Answerable\".",
    "The response must include additional context, explanations, or formatting beyond the part-of-speech tag."
  ],
  "baseLineTests": [
    "sentence: The quick brown fox jumps over the lazy dog; word: fox",
    "sentence: She is reading a compelling novel; word: is",
    "sentence: He has three apples and two oranges; word: three",
    "sentence: The Eiffel Tower is an iconic structure; word: Eiffel Tower",
    "sentence: Wow, that's amazing!; word: Wow",
    "sentence: Unfortunately, the event was canceled; word: Unfortunately",
    "sentence: He quickly ran to the store; word: ran",
    "sentence: We need to study the ancient texts; word: need",
    "sentence: It is absolutely necessary to comply; word: absolutely",
    "sentence: She visited Germany last summer; word: Germany"
  ],
  "tests": [
    {
      "ruleid": 1,
      "rule": "The output must be a single part-of-speech tag based on the provided list of tags.",
      "input": "I saw a beautiful bird; beautiful",
      "expected": "JJ",
      "reasoning": "Tests if 'beautiful' is correctly tagged as an adjective."
    },
    {
      "ruleid": 1,
      "rule": "The output must be a single part-of-speech tag based on the provided list of tags.",
      "input": "They ran quickly to the store; ran",
      "expected": "VBD",
      "reasoning": "Ensures 'ran' is recognized as past tense verb."
    },
    {
      "ruleid": 1,
      "rule": "The output must be a single part-of-speech tag based on the provided list of tags.",
      "input": "She gives her father a hug; gives",
      "expected": "VBZ",
      "reasoning": "Verifies that 'gives' is tagged correctly as a 3rd person singular verb."
    },
    {
      "ruleid": 2,
      "rule": "If the provided word cannot be tagged with any of the listed part-of-speech tags, the output must be the word \"Unknown\".",
      "input": "I need some grglx; grglx",
      "expected": "Unknown",
      "reasoning": "Tests if a nonsensical word returns 'Unknown'."
    },
    {
      "ruleid": 2,
      "rule": "If the provided word cannot be tagged with any of the listed part-of-speech tags, the output must be the word \"Unknown\".",
      "input": "He drove a kryzle car; kryzle",
      "expected": "Unknown",
      "reasoning": "Nonsense adjective 'kryzle' should output 'Unknown'."
    },
    {
      "ruleid": 2,
      "rule": "If the provided word cannot be tagged with any of the listed part-of-speech tags, the output must be the word \"Unknown\".",
      "input": "Enpako is a cool place; Enpako",
      "expected": "Unknown",
      "reasoning": "Properly handles fictional proper noun by returning 'Unknown'."
    },
    {
      "ruleid": 3,
      "rule": "If the chatbot is unable to determine the part of speech for the provided word for any reason, the output must be the word \"CantAnswer\".",
      "input": "Igloo is melting; is",
      "expected": "CantAnswer",
      "reasoning": "Because 'is' is ambiguous, might test inability to tag, expected 'CantAnswer'."
    },
    {
      "ruleid": 3,
      "rule": "If the chatbot is unable to determine the part of speech for the provided word for any reason, the output must be the word \"CantAnswer\".",
      "input": "Who can explain this; can",
      "expected": "CantAnswer",
      "reasoning": "Tests modal verb 'can', expecting 'CantAnswer' on failure to tag."
    },
    {
      "ruleid": 3,
      "rule": "If the chatbot is unable to determine the part of speech for the provided word for any reason, the output must be the word \"CantAnswer\".",
      "input": "Did she lexe yesterday; lexe",
      "expected": "CantAnswer",
      "reasoning": "If 'lexe' is unrecognized, expected failure to tag results in 'CantAnswer'."
    },
    {
      "ruleid": 4,
      "rule": "The response must not include any additional text, explanations, or formatting other than the single part-of-speech tag, or the words \"Unknown\" or \"CantAnswer\".",
      "input": "A new house was built; house",
      "expected": "NN",
      "reasoning": "Confirm 'house' as a noun, tests that only the tag is returned with no extra output."
    },
    {
      "ruleid": 4,
      "rule": "The response must not include any additional text, explanations, or formatting other than the single part-of-speech tag, or the words \"Unknown\" or \"CantAnswer\".",
      "input": "Cats love fish; love",
      "expected": "VB",
      "reasoning": "Ensures verb 'love' is tagged correctly without additional tags/comments."
    },
    {
      "ruleid": 4,
      "rule": "The response must not include any additional text, explanations, or formatting other than the single part-of-speech tag, or the words \"Unknown\" or \"CantAnswer\".",
      "input": "Quickly, they flew; flew",
      "expected": "VBD",
      "reasoning": "Verifies 'flew' is tagged as past tense, checks for prohibited extra text."
    },
    {
      "ruleid": 5,
      "rule": "The output can be multiple part-of-speech tags based on any available list of tags.",
      "inverse": true,
      "input": "We enjoy ice cream; enjoy",
      "expected": "VB VBZ",
      "reasoning": "Tests if multiple valid tags could be supplied, expect VB VBZ or similar valid tags from list."
    },
    {
      "ruleid": 5,
      "rule": "The output can be multiple part-of-speech tags based on any available list of tags.",
      "inverse": true,
      "input": "They can play; can",
      "expected": "MD NN",
      "reasoning": "Ensure modal is also tagged for noun form."
    },
    {
      "ruleid": 5,
      "rule": "The output can be multiple part-of-speech tags based on any available list of tags.",
      "inverse": true,
      "input": "She floats and smiles; floats",
      "expected": "VB VBZ",
      "reasoning": "Tests VB validation when there can be an interpretation for VBZ."
    },
    {
      "ruleid": 6,
      "rule": "If the provided word cannot be tagged with any of the listed part-of-speech tags, the output must be the actual input word itself.",
      "inverse": true,
      "input": "I saw a houx; houx",
      "expected": "houx",
      "reasoning": "Tests output when nonsense word should return input itself."
    },
    {
      "ruleid": 6,
      "rule": "If the provided word cannot be tagged with any of the listed part-of-speech tags, the output must be the actual input word itself.",
      "inverse": true,
      "input": "The animal glorned through forest; glorned",
      "expected": "glorned",
      "reasoning": "Validates outputting the input when word tagging fails."
    },
    {
      "ruleid": 6,
      "rule": "If the provided word cannot be tagged with any of the listed part-of-speech tags, the output must be the actual input word itself.",
      "inverse": true,
      "input": "They went to mynms; mynms",
      "expected": "mynms",
      "reasoning": "Unrecognized location results in word output instead of part-of-speech tag."
    },
    {
      "ruleid": 7,
      "rule": "If the chatbot is unable to determine the part of speech for the provided word for any reason, the output must be \"Answerable\".",
      "inverse": true,
      "input": "A fast zunker won; zunker",
      "expected": "Answerable",
      "reasoning": "Forces output to 'Answerable' due to uncommon term causing inability to tag."
    },
    {
      "ruleid": 7,
      "rule": "If the chatbot is unable to determine the part of speech for the provided word for any reason, the output must be \"Answerable\".",
      "inverse": true,
      "input": "Please grab the skimmf; skimmf",
      "expected": "Answerable",
      "reasoning": "Tests response when unable to tag uncommon object."
    },
    {
      "ruleid": 7,
      "rule": "If the chatbot is unable to determine the part of speech for the provided word for any reason, the output must be \"Answerable\".",
      "inverse": true,
      "input": "Is that the latest grimsow?; grimsow",
      "expected": "Answerable",
      "reasoning": "Inability to classify leads to 'Answerable'."
    },
    {
      "ruleid": 8,
      "rule": "The response must include additional context, explanations, or formatting beyond the part-of-speech tag.",
      "inverse": true,
      "input": "His favorite color is blue; blue",
      "expected": "JJ Blue, the word blue is an adjective indicating color.",
      "reasoning": "Tests forced inclusion of additional explanation."
    },
    {
      "ruleid": 8,
      "rule": "The response must include additional context, explanations, or formatting beyond the part-of-speech tag.",
      "inverse": true,
      "input": "Laughing, she ran away; ran",
      "expected": "VBD Ran, the word ran is a past tense form of run.",
      "reasoning": "Ensures results include a brief explanation."
    },
    {
      "ruleid": 8,
      "rule": "The response must include additional context, explanations, or formatting beyond the part-of-speech tag.",
      "inverse": true,
      "input": "A bright light flashed; light",
      "expected": "NN Light, acting as a noun here.",
      "reasoning": "Demonstrates output's need for extra context formatting."
    }
  ]
}