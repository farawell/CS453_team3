{
  "prompt": "---\nname: Speech Tag\ndescription: Determine the part of speech for a given word\nsource: \"modified from 'SAMMO: A general-purpose framework for prompt optimization'\"\nurl: https://www.microsoft.com/en-us/research/uploads/prod/2024/04/Prompts-As-Programs_A-Structure-Aware-Approach.pdf\ninputs:\n    sentence:\n        type: \"string\"\n    word:\n        type: \"string\"\nsample:\n    sentence: \"The quick brown fox jumps over the lazy dog.\"\n    word: \"jumps\"\n---\nsystem:\nIn this task, you will be presented with a sentence and a word contained\nin that sentence. You have to determine the part of speech for a given word\nand return just the tag for the word's part of speech. \n\nReturn only the part of speech tag.  If the word cannot be tagged with\nthe listed tags, return Unknown.  If you are unable to tag the word, return\nCantAnswer.\n\nHere is the\nAlphabetical list of part-of-speech tags used in this task: CC: Coordinating conjunction, CD: Cardinal number, DT:\nDeterminer, EX: Existential there, FW: Foreign word, IN: Preposition or subordinating conjunction, JJ: Adjective, JJR:\nAdjective, comparative, JJS: Adjective, superlative, LS: List item marker, MD: Modal, NN: Noun, singular or mass, NNS: Noun,\nplural, NNP: Proper noun, singular, NNPS: Proper noun, plural, PDT: Predeterminer, POS: Possessive ending, PRP: Personal\npronoun, PRP$: Possessive pronoun, RB: Adverb, RBR: Adverb, comparative, RBS: Adverb, superlative, RP: Particle, SYM: Symbol,\nTO: to, UH: Interjection, VB: Verb, base form, VBD: Verb, past tense, VBG: Verb, gerund or present participle, VBN: Verb,\npast participle, VBP: Verb, non-3rd person singular present, VBZ: Verb, 3rd person singular present, WDT: Wh-determiner, WP:\nWh-pronoun, WP$: Possessive wh-pronoun, WRB: Wh-adverb\nuser:\n{{sentence}}; {{word}}",
  "inputSpec": "The input is a sentence and a word contained within that sentence. \nThe sentence must be provided as a continuous string of text. \nThe word must be a single, continuous string. \nThe word must be part of the provided sentence. \nThe input format must be \"{{sentence}}; {{word}}\", where sentence and word are separated by a semicolon and a space. \nThe sentence can include punctuation and multiple words.\nThe input must not include any special characters that are not part of the sentence or word.",
  "rules": [
    "The response must consist of only the part of speech tag for the provided word from the sentence.",
    "If the word's part of speech corresponds to any of the predefined tags, the response must be the tag that accurately represents the part of speech of that word.",
    "The response must be \"Unknown\" if the word cannot be associated with any of the predefined part of speech tags.",
    "The response must be \"CantAnswer\" when the word cannot be tagged due to reasons not covered by the predefined tags or if there is insufficient context to determine the tag.",
    "All responses must strictly adhere to the tags provided in the alphabetical list of part-of-speech tags."
  ],
  "inverseRules": [
    "Responses should include all parts of speech found in the sentence for the provided word.",
    "If the word's part of speech corresponds to any predefined tags, the response should avoid using the tag that accurately represents the part of speech of that word.",
    "Responses should never be \"Unknown,\" even if the word cannot be associated with any predefined part of speech tags.",
    "Responses should not be \"CantAnswer\" regardless of why the word cannot be tagged or if there's insufficient context to determine the tag.",
    "Responses can use tags beyond those in the alphabetical list of part-of-speech tags."
  ],
  "baseLineTests": [
    "sentence: The quick brown fox jumps over the lazy dog; word: fox",
    "sentence: She ate the entire cake by herself; word: ate",
    "sentence: Can you believe it is already September?; word: September",
    "sentence: Life is full of surprises and challenges.; word: of",
    "sentence: Thomas Edison was a prolific inventor.; word: prolific",
    "sentence: I'm planning to visit Italy next summer.; word: Italy",
    "sentence: His family moved to a new house last month.; word: last",
    "sentence: She handed the papers to the teacher.; word: to",
    "sentence: Despite the rain, the event was a success.; word: Despite",
    "sentence: He couldn't have seen the accident from his position.; word: couldn't",
    "sentence: Give me that blue notebook over there.; word: blue",
    "sentence: The recipe calls for two cups of sugar.; word: two",
    "sentence: We watched the sunset on the beach.; word: on",
    "sentence: Jennifer and Peter are best friends.; word: and"
  ],
  "tests": [
    {
      "rule": "The response must consist of only the part of speech tag for the provided word from the sentence.",
      "input": "Cats play in the garden; Cats",
      "expected": "NN",
      "reasoning": "Tests if the software returns the singular noun tag 'NN' correctly for the word 'Cats', meeting the output format requirement."
    },
    {
      "rule": "The response must consist of only the part of speech tag for the provided word from the sentence.",
      "input": "She is walking; walking",
      "expected": "VBG",
      "reasoning": "Tests if the software correctly identifies and returns the gerund verb tag 'VBG' for the word 'walking'."
    },
    {
      "rule": "The response must consist of only the part of speech tag for the provided word from the sentence.",
      "input": "The book was quite interesting; interesting",
      "expected": "JJ",
      "reasoning": "Ensures the software accurately recognizes 'interesting' as an adjective 'JJ', confirming the response format adherence."
    },
    {
      "rule": "If the word's part of speech corresponds to any of the predefined tags, the response must be the tag that accurately represents the part of speech of that word.",
      "input": "He beautifully painted the wall; beautifully",
      "expected": "RB",
      "reasoning": "Verifies that the software assigns the correct adverb tag 'RB' to the word 'beautifully'."
    },
    {
      "rule": "If the word's part of speech corresponds to any of the predefined tags, the response must be the tag that accurately represents the part of speech of that word.",
      "input": "Thirty students attended the seminar; Thirty",
      "expected": "CD",
      "reasoning": "Checks whether the software accurately tags the cardinal number 'Thirty' with 'CD'."
    },
    {
      "rule": "If the word's part of speech corresponds to any of the predefined tags, the response must be the tag that accurately represents the part of speech of that word.",
      "input": "Dogs are loyal animals; Dogs",
      "expected": "NNS",
      "reasoning": "Tests the software's ability to correctly tag the plural noun 'Dogs' as 'NNS'."
    },
    {
      "rule": "The response must be \"Unknown\" if the word cannot be associated with any of the predefined part of speech tags.",
      "input": "He went to quxly; quxly",
      "expected": "Unknown",
      "reasoning": "Tests if the software returns 'Unknown' for 'quxly', a word unrelated to any predefined tags."
    },
    {
      "rule": "The response must be \"Unknown\" if the word cannot be associated with any of the predefined part of speech tags.",
      "input": "It's a wug machine; wug",
      "expected": "Unknown",
      "reasoning": "Verifies that the software returns 'Unknown' for made-up word 'wug', which has no predefined tag."
    },
    {
      "rule": "The response must be \"Unknown\" if the word cannot be associated with any of the predefined part of speech tags.",
      "input": "Her blorpt was unexpected; blorpt",
      "expected": "Unknown",
      "reasoning": "Ensures that 'blorpt,' a fictional word, is tagged as 'Unknown', confirming the rule."
    },
    {
      "rule": "The response must be \"CantAnswer\" when the word cannot be tagged due to reasons not covered by the predefined tags or if there is insufficient context to determine the tag.",
      "input": "The quick brown fox; quick",
      "expected": "CantAnswer",
      "reasoning": "Tests if the software returns 'CantAnswer' due to lack of context to distinguish between a noun and adjective without further sentence context."
    },
    {
      "rule": "The response must be \"CantAnswer\" when the word cannot be tagged due to reasons not covered by the predefined tags or if there is insufficient context to determine the tag.",
      "input": "He said to me; said",
      "expected": "CantAnswer",
      "reasoning": "Challenges the software to determine the correct tense of 'said' without sufficient context, expecting a return of 'CantAnswer'."
    },
    {
      "rule": "The response must be \"CantAnswer\" when the word cannot be tagged due to reasons not covered by the predefined tags or if there is insufficient context to determine the tag.",
      "input": "A small green ball; small",
      "expected": "CantAnswer",
      "reasoning": "Ensures that the software returns 'CantAnswer' when unable to decide between a comparative or non-comparative adjective due to insufficient context."
    },
    {
      "rule": "All responses must strictly adhere to the tags provided in the alphabetical list of part-of-speech tags.",
      "input": "I saw four deer; saw",
      "expected": "VB",
      "reasoning": "Confirms the software returns the tag 'VB' for 'saw', validating adherence to predefined list."
    },
    {
      "rule": "All responses must strictly adhere to the tags provided in the alphabetical list of part-of-speech tags.",
      "input": "Please give it to Jane; to",
      "expected": "TO",
      "reasoning": "Validates if the software correctly tags the word 'to' as a preposition 'TO', confirming adherence to requirements."
    },
    {
      "rule": "All responses must strictly adhere to the tags provided in the alphabetical list of part-of-speech tags.",
      "input": "Wow, that was thrilling; Wow",
      "expected": "UH",
      "reasoning": "Tests if the software correctly tags 'Wow' as an interjection 'UH', adhering strictly to the part-of-speech tag list."
    }
  ]
}